---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-ec2-ami-snapshot

# Tags of this project
tags:
  - aws
  - terraform
  - terraform-modules
  - backups
  - ami
  - snapshot
  - replica

# Categories of this project
categories:
  - terraform-modules/backups

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-ec2-ami-snapshot

# Badges to display
badges:
  - name: "Build Status"
    image: "https://travis-ci.org/cloudposse/terraform-aws-ec2-ami-snapshot.svg?branch=master"
    url: "https://travis-ci.org/cloudposse/terraform-aws-ec2-ami-snapshot"
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-ec2-ami-snapshot.svg"
    url: "https://travis-ci.org/cloudposse/terraform-aws-ec2-ami-snapshot/releases"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related:
  - name: "terraform-aws-ec2-ami-backup"
    description: "Terraform module for automatic & scheduled AMI creation"
    url: "https://github.com/cloudposse/terraform-aws-ec2-ami-backup"
  - name: "terraform-aws-ec2-bastion-server"
    description: "Terraform Module to define a generic Bastion host with parameterized user_data"
    url: "https://github.com/cloudposse/terraform-aws-ec2-bastion-server"
  - name: "terraform-aws-ec2-instance"
    description: "Terraform Module for providing a general EC2 instance provisioned by Ansible"
    url: "https://github.com/cloudposse/terraform-aws-ec2-instance"
  - name: "terraform-aws-ec2-admin-server"
    description: "Terraform Module for providing a EC2 instance capable of running admin tasks and provisioned by Ansible"
    url: "https://github.com/cloudposse/terraform-aws-ec2-admin-server"
  - name: "terraform-aws-ec2-cloudwatch-sns-alarms"
    description: "Terraform module that configures CloudWatch SNS alerts for EC2 instances"
    url: "https://github.com/cloudposse/terraform-aws-ec2-cloudwatch-sns-alarms"
  - name: "terraform-aws-ec2-instance-group"
    description: "Terraform Module for provisioning multiple general purpose EC2 hosts for stateful applications."
    url: "https://github.com/cloudposse/terraform-aws-ec2-instance-group"
  - name: "terraform-aws-ec2-instance-group"
    description: "Terraform Module for provisioning multiple general purpose EC2 hosts for stateful applications."
    url: "https://github.com/cloudposse/terraform-aws-ec2-instance-group"   

# Short description of this project
description: |-
  Terraform module to easily generate AMI snapshots to create replica instances

# How to use this project
usage: |-
  ### Create an AWS instance
  ```
  resource "aws_instance" "default" {
    ami           = "ami-408c7f28"
    instance_type = "t1.micro"

    tags = {
      Name = "test1"
    }
  }
  ```

  ### Create AMI from an AWS instance. Instance ID is required"
  ```
  module "tf_ami_from_instance" {
    source             = "git::https://github.com/cloudposse/tf_ami_from_instance.git?ref=master"
    source_instance_id = "${aws_instance.web.id}"
    stage              = "${var.stage}"
    namespace          = "${var.namespace}"
    name               = "${var.name}"
    attributes         = "${var.attributes}"
    tags               = "${var.tags}"
  }

  ```

  ## Caveats
  * Terraform will only keep the latest AMI snapshot (terraform will delete the previously generated AMI) See our Lamda based solution which avoids this pitfall: https://github.com/cloudposse/tf_lambda_ami_backup
  * This is is not compatible with autoscaling groups


include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Sergey Vasilyev"
    github: "s2504s"